# Generated by Django 3.1.7 on 2021-03-21 12:13

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('coursePage', '0001_initial'),
        ('partyPage', '0001_initial'),
        ('compPage', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_time', models.TimeField(max_length=10, verbose_name='from_time')),
                ('to_time', models.TimeField(max_length=10, verbose_name='to_time')),
                ('date', models.DateField(max_length=20, verbose_name='date')),
                ('num_participants', models.IntegerField(default=0, verbose_name='num_participants')),
                ('competition', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='compPage.competition')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursePage.course')),
                ('event', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='partyPage.event')),
                ('game', models.ManyToManyField(to='compPage.Game')),
            ],
        ),
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('type', models.CharField(choices=[('MEMBER', 'Member'), ('COORDINATOR', 'Coordinator'), ('COMMITTEE', 'Committee'), ('MANAGER', 'Manager')], default='MEMBER', max_length=50, verbose_name='Type')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('age', models.IntegerField(verbose_name='age')),
                ('gender', models.CharField(max_length=10, verbose_name='gender')),
                ('courses', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursePage.course')),
                ('event', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='partyPage.event')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Committee',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('mysite.newuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Coordinator',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('mysite.newuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('mysite.newuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('mysite.newuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
